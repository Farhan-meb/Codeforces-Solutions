//------Farhaan Mahbub-------


#include <bits/stdc++.h>
using namespace std;


#define colls(a) printf("%lld ",a);
#define colln(a) printf("%lld\n",a);
#define cois(a) printf("%d ",a);
#define coin(a) printf("%d\n",a);
#define cods(a) printf("%.6f ",a);
#define codn(a) printf("%.6f\n",a);
#define cocs(a) printf("%c ",a);
#define cocn(a) printf("%c\n",a);
#define coss(a) printf("%s ",a);
#define cosn(a) printf("%s\n",a);

#define scll(a) scanf("%lld",&a);
#define sci(a) scanf("%d",&a);
#define scd(a) scanf("%lf",&a);
#define scc(a) scanf("%c", &a);
#define scs(a) scanf("%s",a);

#define ischar(x)    (('a' <= x && x <= 'z') || ('A' <= x && x <= 'Z'))
#define isvowel(ch)  ((ch=='a'||ch=='e'||ch=='i'||ch=='o'||ch=='u')||(ch=='A'|| ch=='E' || ch=='I'|| ch=='O'|| ch=='U'))
#define mem(a,b)     memset(a,b,sizeof(a));
#define memvec(a,b)  for(int i=0;i<a.size();i++){a[i]=b;}

#define pb push_back
#define pp pop_back
#define eb echecklace_back
#define in  freopen("input.txt", "r", stdin)
#define out  freopen("output.txt", "w", stdout)
#define check(s,a) cout<<s<<" : "<<a<<endl;

int main()
{

    int t;
    cin>>t;

    while(t--)
    {
        int n,q;
        cin>>n>>q;
        vector<int>p,ne;
        string s;
        cin>>s;

        for(int i=0; i<s.size(); i++)
        {
            if(s[i]=='0')
            {
                p.pb(i);
            }
            else
            {
                ne.pb(i);
            }
        }

        while(q--)
        {
            int l,r;
            cin>>l>>r;
            r--;l--;
            string temp = "";
            bool f=0;
            int ll = 0, rr =0;
            int last = -1;
            int first = -1, lastt = -1;
            for(int i=l; i<=r; i++)
            {
                //cout<<"now : "<<s[i]<<" "<<endl;
                bool ok = 0;
                if(s[i]=='0')
                {
                    while(1)
                    {
                        if(p[ll]>last)
                        {
                            if(first==-1){
                                first = p[ll];
                            }
                            else{
                                lastt = p[ll];
                            }
                            ok = 1;

                            last = p[ll];
                            ll++;
                            break;
                        }
                        ll++;
                    }
                }
                else{
                    while(1)
                    {
                        if(ne[rr]>last)
                        {
                            if(first==-1){
                                first = ne[rr];
                            }
                            else{
                                lastt = ne[rr];
                            }
                            ok = 1;
                            last = ne[rr];
                            rr++;
                            break;
                        }
                        rr++;
                    }
                }
                if(ok) continue;
                else{
                    f=1;
                    break;
                }
            }


            if(f) cout<<"NO\n";
            else{
                //cout<<first<<" "<<lastt<<endl;
                if(lastt-first<=r-l){
                    char hh = s[lastt];
                    bool gg = 0;
                    for(int i=lastt+1;i<s.size();i++){
                        if(s[i]==hh){
                            gg = 1;
                            break;
                        }
                    }
                    if(gg) cout<<"YES\n";
                    else cout<<"NO\n";
                }
                else cout<<"YES\n";
            }


        }


    }


}
